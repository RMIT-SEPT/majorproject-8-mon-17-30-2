{"version":3,"sources":["Utils/utils.js","services/PostRequestService.js","components/Register.js","services/AuthenticationService.js","components/Login.js","components/Nav/Navbar.jsx","components/Routes/WorkerAuthenticatedRoute.jsx","components/Routes/CustomerAuthenticatedRoute.jsx","components/Routes/AdminAuthenticatedRoute.jsx","components/Dashboard/DashboardCard.jsx","services/GetRequestService.js","components/Dashboard/Profile.jsx","components/WorkSchedule/WorkerBookingSlot.jsx","services/WorkerService.js","components/WorkSchedule/WorkdaySchedule.jsx","components/Dashboard/Dashboard.jsx","components/Bubbles/BookingBubble.jsx","services/CustomerService.js","components/BookingHistory/BookingHistory.jsx","components/AdminBookingSummary/BookingSummary.jsx","services/BusinessService.js","services/BookingService.js","components/Bubbles/BookingSlotBubble.jsx","components/MakeABooking/BookingPageTest.jsx","components/MakeABooking/BusinessCard.jsx","components/MakeABooking/SelectBusinessPage.jsx","services/AdminService.js","components/AdminBookingSummary/PastBookingSummary.jsx","components/CurrentBookings/BookingBubble.jsx","components/CurrentBookings/CurrentBookings.jsx","components/ManageEmployees/AddEmployeeButton.jsx","components/ManageEmployees/EmployeeListItem.jsx","components/ManageEmployees/EmployeeList.jsx","components/ManageEmployees/ManageEmployeePage.jsx","components/Dashboard/WorkerScheduleTable.jsx","components/ManageEmployees/WorkerProfile.jsx","components/HomePage/AboutAndContact.js","components/Footer.jsx","components/Routes/AppRouting.jsx","App.js","serviceWorker.js","index.js"],"names":["CUSTOMER_BUTTON_DETAILS","key","title","desc","link","ADMIN_BUTTON_DETAILS","API_HOST","url","postedObject","axios","post","Register","props","state","fullname","username","password","address","mobile","email","hasRegisterFailed","handleSubmit","bind","handleChange","event","preventDefault","console","log","this","customer","name","phoneNumber","PostRequestService","postRequest","then","response","data","setState","intialState","history","push","pathname","justRegistered","authorised","catch","target","value","className","method","onSubmit","type","placeholder","onChange","required","Component","get","API_URL","headers","authorization","createBasicAuthToken","id","window","btoa","sessionStorage","setItem","setupAxiosInterceptors","token","interceptors","request","use","config","isUserLoggedIn","retVal","getItem","user","role","businessId","removeItem","Login","hasLoginFailed","_isMounted","location","AuthenticationService","executeBasicAuthenticationService","registerSuccessfulLogin","getRole","setIsLoggedIn","logout","onClick","Navbar","isLoggedIn","to","toLowerCase","href","getLoggedInUserName","WorkerAuthenticatedRoute","CustomerAuthenticatedRoute","AdminAuthenticatedRoute","DashboardCard","Profile","authenticatedUser","authenticatedUserId","getLoggedInId","useState","userDetails","setUserDetails","services","setServices","useEffect","GetRequestService","getRequestId","apiUrl","businessname","map","service","WorkerBookingSlot","bookingSlot","bookings","setBookings","availableServices","Card","bg","Body","Header","startTime","endTime","Title","Text","class","capacity","length","booking","customerName","bookedService","WORKER_API_BASE_URL","workerId","workerUsename","date","WorkdaySchedule","moment","format","toString","slots","setSlots","WorkerService","getWorkSlotByDateAndWorkerId","workSlot","bookingSlots","Dashboard","details","BookingBubble","businessName","serviceTitle","workerName","Footer","CUSTOMER_API_BASE_URL","customerId","BookingHistory","CustomerService","getCustomerPastBookings","aria-label","BookingSummary","BUSINESS_API_BASE_URL","BOOKING_API_BASE_URL","searchRequest","bookingSlotId","bookingId","delete","BookingSlotBubble","handleChosenSlot","serviceId","setServiceId","disabled","selected","hidden","Button","size","BookingPageTest","serviceList","workerList","workers","business","setBusiness","setBusinessId","setCustomerId","worker","setWorkerId","setWorkers","setBookingSlotId","setDate","dateString","setDateString","setBookingSlots","bookingSlotVar","serviceIdVar","show","setShow","handleClose","forceSetServiceId","forceSetBookingSlots","bookingSlot_id","service_id","BookingService","getBookingSlotById","newBooking","alert","handleModal","getMatchingBookingSlots","Array","isArray","getCustomerById","BusinessService","getBusinessById","match","params","style","width","chosenDate","convertedDate","isClearable","dateFormat","placeholderText","Modal","onHide","closeButton","variant","BusinessCard","SelectBusinessPage","businesses","getAllBusinesses","adminId","ADMIN_API_BASE_URL","PastBookingSummary","AdminService","getAdminById","getBusinessPastBookings","getPastBookings","deleteCustomerBooking","CurrentBookings","getCustomerCurrentBookings","AddEmployeeButton","EmployeeListItem","EmployeeList","setworkers","getWorkersByBusiness","getBusinessId","ManageEmployeesPage","WorkerScheduleTable","WorkerProfile","AboutUs","Container","Row","Col","AppRouting","path","render","exact","component","AboutAndContact","ManageEmployeePage","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.621ed2b6.chunk.js","sourcesContent":["const API_HOST = 'http://milestone2application-env.eba-zp9wdxdp.us-east-1.elasticbeanstalk.com'\nconst GET_CUSTOMER_URL = '/api/customer/';\nconst POST_CUSTOMER_URL= \"/api/customer/register/\";\n\nconst GET_ADMIN_URL = '/api/admin/';\nconst GET_WORKER_URL = '/api/worker/';\n\nconst CUSTOMER = \"CUSTOMER\";\nconst ADMIN = \"ADMIN\";\nconst WORKER = \"WORKER\";\n\n\nconst CUSTOMER_BUTTON_DETAILS = [\n    {key: 1, title: \"Make a Booking\", desc: \"Make Bookings!\", link:\"/bookings/business\"},\n    {key: 2, title: \"Manage Bookings\", desc: \"Edit or Cancel your current bookings!\", link:\"/bookings/manage\"},\n    {key: 3, title: \"Booking History\", desc: \"View successfully completed bookings\", link:\"/bookings/past\"}\n];\n\nconst ADMIN_BUTTON_DETAILS = [\n    {key: 1, title: \"Manage Employees\", desc: \"View, Add or Edit employees!\", link:\"/workers\"},\n    {key: 2, title: \"Manage Schedule\", desc: \"Add or Edit working times!\", link:\"/schedule\"},\n    {key: 3, title: \"Booking Summary\", desc: \"View a summary of completed bookings or ongoing bookings!\", link:\"/bookings/summary\"}\n];\n\nconst USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\nconst ROLE_SESSION_ATTRIBUTE = \"Role\"\nconst ID_SESSION_ATTRIBUTE   = \"Id\"\nconst BUSINESS_ID_SESSION_ATTRIBUTE = \"businessId\"\n\nconst BUSINESS_CARD_LINK = \"/bookings/create/\";\n\nexport default API_HOST;\nexport {GET_CUSTOMER_URL, GET_ADMIN_URL, POST_CUSTOMER_URL, CUSTOMER, ADMIN, WORKER};\nexport {CUSTOMER_BUTTON_DETAILS, ADMIN_BUTTON_DETAILS, USER_NAME_SESSION_ATTRIBUTE_NAME};\nexport {ROLE_SESSION_ATTRIBUTE, ID_SESSION_ATTRIBUTE, GET_WORKER_URL, BUSINESS_CARD_LINK, BUSINESS_ID_SESSION_ATTRIBUTE};\n","import axios from 'axios'\nimport API_HOST from \"../Utils/utils\";\n\nclass PostRequestService {\n    // Service for performing post request just need to input URL and body\n    async postRequest(url, postedObject) {\n        return axios.post(`${API_HOST}${url}`, postedObject);\n    }   \n}\n\nexport default new PostRequestService()","import React, { Component } from \"react\";\nimport \"../css/Register.css\";\nimport PostRequestService from \"../services/PostRequestService\";\nimport {POST_CUSTOMER_URL} from \"../Utils/utils\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: \"\",\n      username: \"\",\n      password: \"\",\n      address: \"\",\n      mobile: \"\",\n      email: \"\",\n      hasRegisterFailed: false,\n     \n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n    const customer = {\n      name: this.state.fullname,\n      username: this.state.username,\n      password: this.state.password,\n      address: this.state.address,\n      email:this.state.email,\n      phoneNumber: this.state.mobile\n    };\n   \n    PostRequestService.postRequest(POST_CUSTOMER_URL, customer)\n          .then(response => {\n            if(response.data != null){\n              this.setState(this.intialState);\n              this.props.history.push({\n                pathname: '/',\n                state: {justRegistered: true, authorised: true}\n              });\n            }\n          }).catch(() => {\n            this.setState({hasRegisterFailed: true });\n          });\n         \n          \n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"Register\" method=\"POST\">  \n        <form onSubmit={this.handleSubmit}>\n          <header className=\"Register-header\">Create an Account</header>\n\n          <div className=\"form\">\n          {this.state.hasRegisterFailed && <div className=\"alert alert-danger\"> Invalid Credentials </div>}\n            <div className=\"form-input\">\n              <label>Full Name:</label>\n              <input\n                type=\"fullname\"\n                name=\"fullname\"\n                placeholder=\"John Doe\"\n                value={this.state.fullname}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-input\">\n              <label>Address:</label>\n              <input\n                type=\"text\"\n                name=\"address\"\n                placeholder=\"123 Apple Street\"\n                value={this.state.address}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-input\">\n              <label>Phone Number:</label>\n              <input\n                type=\"text\"\n                name=\"mobile\"\n                placeholder=\"12345678\"\n                value={this.state.mobile}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-input\">\n            <label>email:</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"john.doe@email.com\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n\n            <div className=\"form-input\">\n              <label>Username:</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-input\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            <button className=\"button buttonshadow\" type=\"submit\">\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Register;\n","import axios from \"axios\";\nimport API_URL, {USER_NAME_SESSION_ATTRIBUTE_NAME, ROLE_SESSION_ATTRIBUTE, ID_SESSION_ATTRIBUTE, BUSINESS_ID_SESSION_ATTRIBUTE} from \"../Utils/utils\";\n\n// Service class that stores the authenticated user variables\nclass AuthenticationService {\n\n    executeBasicAuthenticationService(username, password) {\n        // Authenicates User and passes username and password to backend\n        return axios.get(`${API_URL}/auth/${username}/${password}`,\n            { headers: { authorization: this.createBasicAuthToken(username, password) } }\n            );\n    }\n\n    createBasicAuthToken(username, password, id) {\n        return 'Basic ' + window.btoa(username + \":\" + password);\n    }\n\n    registerSuccessfulLogin(username, password, id) {\n        // We only register successful login if the returned axios request is not an exception\n        // i.e the user was found with the right creditentials in the database\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n        // From now on every request will have an authorisation token created\n        // so that we don't have to create it each time we make a request to our server\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password));\n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token;\n                }\n                return config;\n            }\n        )\n    }\n\n    isUserLoggedIn() {\n        let retVal = true;\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        if (user === null){\n            retVal = false;\n        }\n        return retVal;\n    }\n\n    getLoggedInUserName() {\n        let retVal = ''\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        if (user !== null){\n            retVal = user;\n        }\n        return retVal;\n    }\n\n    getLoggedInId() {\n        let retVal = ''\n        let id = sessionStorage.getItem(ID_SESSION_ATTRIBUTE)\n        if (id !== null){\n            retVal = id;\n        }\n        return retVal;\n    }\n\n    getRole() {\n        let retVal = ''\n        let role = sessionStorage.getItem(ROLE_SESSION_ATTRIBUTE)\n        if (role !== null){\n            retVal = role;\n        }\n        return retVal;\n    }\n    \n    getBusinessId() {\n        let retVal = ''\n        let businessId = sessionStorage.getItem(BUSINESS_ID_SESSION_ATTRIBUTE)\n        if (businessId !== null){\n            retVal = businessId;\n        }\n        return retVal;\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        sessionStorage.removeItem(ROLE_SESSION_ATTRIBUTE);\n        sessionStorage.removeItem(ID_SESSION_ATTRIBUTE);\n        sessionStorage.removeItem(BUSINESS_ID_SESSION_ATTRIBUTE)\n    }\n}\n\nexport default new AuthenticationService()","import React, { Component } from \"react\";\nimport \"../css/Login.css\";\nimport \"../Utils/utils\";\nimport AuthenticationService from \"../services/AuthenticationService\";\nimport { ID_SESSION_ATTRIBUTE, ROLE_SESSION_ATTRIBUTE} from \"../Utils/utils\";\n\n//for debug printing using util2.inspect(object, false, null, true)\n// const util2 = require('util');\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n    };   \n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this._isMounted = false;\n  }\n\n  componentDidMount() {  \n    this.setState({ hasLoginFailed: false });\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    if(this.props.location.state){\n      this.props.location.state = null;\n    }\n    this._isMounted = false;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    AuthenticationService\n    .executeBasicAuthenticationService(this.state.username, this.state.password)\n    .then((response) => {    \n\n        sessionStorage.setItem(ROLE_SESSION_ATTRIBUTE, response.data.role);\n        sessionStorage.setItem(ID_SESSION_ATTRIBUTE, response.data.id);\n        AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n        if(AuthenticationService.getRole() === \"CUSTOMER\"){\n          this.props.history.push(`/customer`);\n          this.props.setIsLoggedIn(true);\n        } else if (AuthenticationService.getRole() === \"ADMIN\"){\n          this.props.history.push(`/admin`);\n          this.props.setIsLoggedIn(true);\n        } else if (AuthenticationService.getRole() === \"WORKER\"){\n          this.props.history.push(`/worker`);\n          this.props.setIsLoggedIn(true);\n        } else{\n          AuthenticationService.logout();\n          this.props.history.push(`/`);\n        } \n\n    }).catch(() => {       \n        this.setState({ hasLoginFailed: true });\n    })\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });  \n  }\n\n  render() {\n    return (\n      <div className=\"Login\">\n   \n          <header className=\"Login-header\">AGME LOGIN</header>\n\n          <div className=\"form\">\n          {this.state.hasLoginFailed && <div className=\"alert alert-warning\"> Invalid Credentials </div>}\n          {this.props.location.state && this.props.location.state.justRegistered ? <div className=\"alert alert-success\"> Successfully registered! Please Login to continue </div> : null}\n          {this.props.location.state && !this.props.location.state.authorised && <div className=\"alert alert-danger\"> Unauthorised Request</div>}      \n\n            <div className=\"form-input\">\n              <label>Username:</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-input\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            <button className=\"button buttonshadow\" type=\"submit\" onClick = {this.handleSubmit}>\n               Login \n            </button>\n          </div>          \n  \n      </div>\n    );\n  }\n}\n\nexport default Login;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\n//basic navbar with bootstrap\nfunction Navbar(props){\n    \n\n   function handleClick(){\n      \n        AuthenticationService.logout();\n        props.setIsLoggedIn(false);\n    }\n\n\n    return (\n        <nav className = \"navbar navbar-expand-lg navbar-dark bg-dark\">\n        {props.isLoggedIn ? <Link to = {\"/\"+ AuthenticationService.getRole().toLowerCase()} className = \"navbar-brand nav-text\">AGME</Link> : \n        <a className = \"navbar-brand nav-text\" href= \"/\">AGME</a>}\n            <div className=\"navbar-collapse\" id=\"navbarNav\">\n            <ul className = \"navbar-nav\">\n            {props.isLoggedIn ? <Link to = {\"/\"+ AuthenticationService.getRole().toLowerCase()} className = \"nav-link\"> <li className = \"nav-item\">Home</li> </Link> :\n                <Link to = \"/\" className = \"nav-link\">\n                    <li className = \"nav-item\">Home</li>   \n                </Link>\n    }\n\n                <Link to = \"/about\" className = \"nav-link\">\n                    <li className = \"nav-item\">About & Contact</li>\n                </Link>\n\n                {/* <Link to = \"/contact\" className = \"nav-link\">\n                    <li className = \"nav-item\">Contact</li>\n                </Link> */}\n            </ul>\n          \n           \n\n            {props.isLoggedIn ? \n                <ul className=\"navbar-nav ml-auto\">\n                    <span className = \"navbar-text\">{AuthenticationService.getLoggedInUserName()}</span>\n                    <Link to = \"/\" className = \"nav-link\">\n                        <li onClick={handleClick} className = \"nav-item\">Logout</li>\n                    </Link>\n                    </ul>\n                \n                : \n\n                <ul className=\"navbar-nav ml-auto\">\n                    <Link to = \"/\" className = \"nav-link\">\n                        <li className = \"nav-item\">Login</li>\n                    </Link>\n                    <Link to = \"/register\" className = \"nav-link\">\n                        <li className = \"nav-item\">Register</li>\n                    </Link>\n        \n                    </ul>\n                 \n            }\n                \n\n           \n         \n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthenticationService from '../../services/AuthenticationService';\nimport {WORKER, ADMIN} from \"../../Utils/utils\";\n// Worker routes only\n// use for Worker only access\nfunction WorkerAuthenticatedRoute(props) {\n    if (AuthenticationService.isUserLoggedIn() && (AuthenticationService.getRole() === WORKER || AuthenticationService.getRole() === ADMIN)) {\n        return <Route {...props} />\n    } else {\n        return <Redirect to={{\n            pathname: '/',\n            state: { authorised: false }\n          }} />\n    }\n    \n}\n\nexport default WorkerAuthenticatedRoute;","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthenticationService from '../../services/AuthenticationService';\nimport {CUSTOMER, ADMIN} from \"../../Utils/utils\";\n\n// Customer routes only\n// use for customer only access\nfunction CustomerAuthenticatedRoute(props) {\n    if (AuthenticationService.isUserLoggedIn() && (AuthenticationService.getRole() === CUSTOMER || AuthenticationService.getRole() === ADMIN)) {\n        return <Route {...props} />\n    } else {\n        return <Redirect to={{\n            pathname: '/',\n            state: { authorised: false }\n          }} />\n    }\n    \n}\n\nexport default CustomerAuthenticatedRoute;","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthenticationService from '../../services/AuthenticationService';\nimport {ADMIN} from \"../../Utils/utils\";\n\n// Admin Route only\n// use for admin access\nfunction AdminAuthenticatedRoute(props) {\n    if (AuthenticationService.isUserLoggedIn() && (AuthenticationService.getRole() === ADMIN)) {\n        return <Route {...props} />\n    } else {\n        return <Redirect to={{\n            pathname: '/',\n            state: { authorised: false }\n          }} />\n    }\n    \n}\n\nexport default AdminAuthenticatedRoute;\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"../../css/BookingHistory.css\";\nfunction DashboardCard(props){\n\n    return(\n      <Link className=\"card text-center dashboard-link\" to={props.link}>\n        <button className=\"btn btn-light\">\n        <div className=\"card-body card-body-dashboard\">\n          <h4 className=\"card-title\">{props.title}</h4>\n          <p className=\"card-text\">\n            <small className=\"text-muted\">{props.desc}</small>\n          </p>\n         \n           <p className=\"card-text\">Click Here!</p> \n       \n        </div>\n        </button>\n      </Link>      \n    \n    )\n\n\n\n}\n\nexport default DashboardCard;","import axios from 'axios'\nimport API_HOST from \"../Utils/utils\";\n\nclass GetRequestService {\n    // Grabs all bookings using backend API\n    // one function for inputting a username\n    // for example\n    // url = \"api/booking/customer/\"\n    //\n    async getRequest(url) {\n        return axios.get(`${API_HOST}${url}`);\n    }\n    async getRequestUsername(url, username) {\n        return axios.get(`${API_HOST}${url}${username}`);\n    }\n    async getRequestId(url, id){\n        return axios.get(`${API_HOST}${url}${id}`);\n    }\n\n}\n\nexport default new GetRequestService()","import React, {useState, useEffect} from \"react\";\nimport \"../../css/Dashboard.css\";\nimport AuthenticationService from \"../../services/AuthenticationService\"\nimport GetRequestService from \"../../services/GetRequestService\";\nimport {CUSTOMER, WORKER, ADMIN, BUSINESS_ID_SESSION_ATTRIBUTE} from \"../../Utils/utils\";\n\nfunction Profile(props){\n    const authenticatedUser = AuthenticationService.getLoggedInUserName();\n    const authenticatedUserId = AuthenticationService.getLoggedInId();\n   \n    const[userDetails, setUserDetails] = useState({});\n    const [services, setServices] = useState([]); \n    useEffect(() => {\n        // GetRequestService.getRequestUsername(props.apiUrl, authenticatedUser)\n        GetRequestService.getRequestId(props.apiUrl, authenticatedUserId)\n        .then((response) => {        \n            setUserDetails(response.data);\n            setServices(response.data.services);   \n            if(response.data.businessId){\n                sessionStorage.setItem(BUSINESS_ID_SESSION_ATTRIBUTE, response.data.businessId);\n            }  \n        })\n        .catch(() => {\n            console.log(\"ERROR USER CANNOT BE FOUND\");\n        });\n\n    }, [authenticatedUserId, props.apiUrl]);\n\n    return(\n        <div className=\"jumbotron profile\">\n            <h1 className=\"display-4\">Hi, {authenticatedUser}!</h1>\n            <p className=\"lead\">View your details</p>\n            <hr className=\"my-4\"/>\n            <ul className=\"list-group profile-list\">\n                <li className=\"list-group-item\">Username: {userDetails.username}</li>\n                <li className=\"list-group-item\">Name: {userDetails.name}</li>\n                {(AuthenticationService.getRole() === CUSTOMER || AuthenticationService.getRole() === WORKER) &&    \n                <div>\n                    <li className=\"list-group-item\">Address: {userDetails.address}</li>\n                    <li className=\"list-group-item\">Phone: {userDetails.phoneNumber}</li>\n                </div>\n                }\n                { AuthenticationService.getRole() === ADMIN && \n                     <li className=\"list-group-item\">Business: {userDetails.businessname}</li>\n                }             \n                <li className=\"list-group-item\">Role: {AuthenticationService.getRole()}</li>\n                { AuthenticationService.getRole() === WORKER && \n                    <div className=\"service-heading\">\n                        <h2 className=\"display-4 text-center\"> Services </h2> \n                        {services.map(service => <li className=\"list-group-item\" key={service.id}> {service.title}</li>)}\n                   </div>\n                }\n            </ul>\n            {AuthenticationService.getRole() !== WORKER && \n                <button className=\"btn btn-info profile-btn\">Edit Details here</button>\n           }\n            \n\n        </div>\n\n\n    )\n}\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport { Card, ToastBody } from 'react-bootstrap';\nimport \"../../css/WorkerSchedule.css\";\n\n//this component is going to be a single grey bubble displaying the data of a single booking\nfunction WorkerBookingSlot(bookingSlot) {\n\n    const [bookings, setBookings] = useState([]); \n    const [services, setServices] = useState([]); \n\n    useEffect(() =>{\n        console.log(\"bookingslot:\", bookingSlot);\n        setBookings(bookingSlot.bookingSlot.bookings);\n        setServices(bookingSlot.bookingSlot.availableServices);\n    },[]);\n    \n    \n    return (\n        <>\n        <Card className='workerbookingslot'\n            bg=\"light\"\n            key={bookingSlot.id}>\n            <Card.Body>\n              <Card.Header>Booking Slot {bookingSlot.bookingSlot.startTime} - {bookingSlot.bookingSlot.endTime}</Card.Header>\n              <Card.Title className=\"cardtitle\"></Card.Title>\n              <Card.Text className=\"cardtext\">\n              <table className=\"table worker-table table-bordered \">              \n                <thead className=\"thead-light\">  \n                  <tr>\n                      <td class=\"slottitle\">Bookings{bookingSlot.bookingSlot.capacity}:</td>\n                      <td>\n                          {bookings.length ? bookings.map((booking) => <>Booking #{booking.id}: {booking.customerName}<br/></>) : \"No bookings\"}\n                      </td>\n                  </tr>\n                  <tr>\n                      <td class=\"slottitle\">Available Services:</td>\n                      <td>\n                          {services.map((service) => <>{service.title}<br/></>)}\n                      </td>\n                  </tr>\n                  <tr>\n                      <td class=\"slottitle\">Booked Service:</td>\n                      <td>\n                          {bookingSlot.bookingSlot.bookedService != null ? bookingSlot.bookingSlot.bookedService : \"Not set\"}\n                      </td>\n                  </tr>\n                  <tr>\n                      <td class=\"slottitle\">Capacity:</td>\n                      <td>\n                          {bookingSlot.bookingSlot.bookedService != null ? bookingSlot.bookings.length + \" / \" + bookingSlot.bookingSlot.bookedService.capacity : \"Not set\"}\n                      </td>\n                  </tr>\n                </thead>\n              </table>\n\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <br/>\n        </>\n    )\n}\n\nexport default WorkerBookingSlot;","import axios from 'axios';\n\nconst WORKER_API_BASE_URL = 'http://milestone2application-env.eba-zp9wdxdp.us-east-1.elasticbeanstalk.com/api/worker'\n\nclass WorkerService {\n\n    getAllWorkers(){\n        return axios.get(WORKER_API_BASE_URL);\n    }\n\n    getWorkerById(workerId){\n        return axios.get(WORKER_API_BASE_URL + '/' + workerId);\n    }\n\n\n    getWorkerByUsername(workerUsename){\n        return axios.get(WORKER_API_BASE_URL + '/' + workerUsename);\n    }\n\n    getWorkSlotByDateAndWorkerId(workerId, date){\n        return axios.get(WORKER_API_BASE_URL + '/' + workerId + '/work-slots/' + date);\n    }\n\n    getWorkersByBusiness(businessId){\n        return axios.get(WORKER_API_BASE_URL + '/business/' + businessId);\n    }\n\n\n\n}\n\nexport default new WorkerService()\n","import React, { useState, useEffect } from \"react\";\nimport WorkerBookingSlot from \"./WorkerBookingSlot\";\nimport \"../../css/WorkerSchedule.css\";\nimport { Card } from 'react-bootstrap';\nimport WorkerService from \"../../services/WorkerService\";\nimport moment from 'moment';\n\nfunction WorkdaySchedule(workerId){\n\n  // \"dummydate\" is a fixed date for testing, \"date\" uses the current day\n  // change the parameter in useeffect/getWorkSlotByDate... to use real data\n  var date = moment().format('yyyy-MM-DD').toString();\n  var dummyDate = \"2007-09-25\";\n\n  const [slots, setSlots] = useState([]);  \n\n  useEffect(() =>{\n    WorkerService.getWorkSlotByDateAndWorkerId(workerId.workerId, dummyDate).then((response) =>{\n      setSlots(response.data.length ? response.data : []);\n    });\n  },[]);\n\n  console.log(slots);\n\n  return (slots.length ? (\n    <>\n    <h1 class=\"display-4 text-center\">Assigned Working Hours<br/>Today - {date}</h1>\n    {slots.map((workSlot) => \n      <>\n      <Card className='workday'\n          bg=\"light\"\n          key={workSlot.id}>\n          <Card.Body>\n            <Card.Header className=\"bold\">Shift: {workSlot.startTime} - {workSlot.endTime}</Card.Header>\n            <Card.Title className=\"cardtitle\"></Card.Title>\n            <Card.Text className=\"cardtext\">\n            {workSlot.bookingSlots.map((bookingSlot) => \n              <WorkerBookingSlot bookingSlot={bookingSlot}/>)}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <br/>\n        </>\n      )}\n\n    </>\n  ) :\n  <><h1 class=\"display-4 text-center\">No Assigned Working Hours<br/>Today ({date})</h1></>)\n\n}\n\nexport default WorkdaySchedule;","import React from \"react\";\nimport DashboardCard from \"./DashboardCard\";\nimport \"../../css/Dashboard.css\";\nimport Profile from \"./Profile\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport {WORKER} from \"../../Utils/utils\";\nimport WorkdaySchedule from \"../WorkSchedule/WorkdaySchedule\";\n\nfunction Dashboard(props) {\n\n  return (\n    <div>\n      <div className=\"card dashboard-card\">\n        <div className=\"card-header dashboard-heading-container\">\n          <h1 className=\"dashboard-heading\">{props.title}</h1>\n        </div>\n        <div className=\"card-body\">\n        \n          <Profile apiUrl={props.apiUrl}/>\n          {AuthenticationService.getRole() !== WORKER ?  \n            \n          //if not a worker display buttons\n          <div className=\"card-deck dashboard-card-deck\" >\n            {props.details.map(details => <DashboardCard key= {details.key} title={details.title} desc={details.desc} link={details.link} />)}\n          </div>\n          :\n          //otherwise display today's work schedule\n          <WorkdaySchedule workerId={AuthenticationService.getLoggedInId()}/>         \n          }  \n\n        </div>\n      </div>      \n    </div>\n\n);\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport \"../../css/BookingHistory.css\";\n\n//this component is going to be a single grey bubble displaying the data of a single booking\nfunction BookingBubble(props) {\n    return (\n        <div>\n        <Card className='bookingbubble' bg=\"light\">\n            <Card.Body>\n              <Card.Header className=\"text-muted\">Booking #{props.booking.id}</Card.Header>\n              <Card.Title className=\"cardtitle\">{props.booking.businessName}</Card.Title>\n              <Card.Text className=\"cardtext\">\n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Service:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.serviceTitle}</span>\n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Date:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.date}</span>                    \n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Start Time:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.startTime}</span>                    \n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">End Time:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.endTime}</span>\n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Worker:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.workerName}</span>\n                    <br/>\n                </span>\n              </Card.Text>\n              <Card.Footer className=\"text-right text-muted\">\n                Completed {/* booking status */}\n              </Card.Footer>\n            </Card.Body>\n          </Card>\n          <br/>\n        </div>\n    )\n}\n\nexport default BookingBubble;","import axios from 'axios';\n\nconst CUSTOMER_API_BASE_URL = 'http://milestone2application-env.eba-zp9wdxdp.us-east-1.elasticbeanstalk.com/api/customer'\n\n// service for all REST api calls stemming from the url 'api/customer'\nclass CustomerService {\n\n    getAllCustomers(){\n        return axios.get(CUSTOMER_API_BASE_URL);\n    }\n\n    createCustomer(customer){\n        return axios.post(CUSTOMER_API_BASE_URL, customer);\n    }\n\n    // need to setup security such that only the owner of this id (or an admin) can access\n    getCustomerById(customerId){\n        return axios.get(CUSTOMER_API_BASE_URL + '/' + customerId);\n    }\n\n    getCustomerBookings(customerId){\n        return axios.get(CUSTOMER_API_BASE_URL + '/' + customerId + '/bookings');\n    }\n\n    getCustomerPastBookings(customerId){\n        return axios.get(CUSTOMER_API_BASE_URL + '/' + customerId + '/bookings/past');\n    }\n\n    getCustomerCurrentBookings(customerId){\n        return axios.get(CUSTOMER_API_BASE_URL + '/' + customerId + '/bookings/current');\n    }\n\n}\n\nexport default new CustomerService()\n","import React, {Component} from \"react\";\nimport BookingBubble from \"../Bubbles/BookingBubble.jsx\";\nimport CustomerService from \"../../services/CustomerService\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\n//for debug printing using util2.inspect(object, false, null, true)\n// const util2 = require('util');\n\nclass BookingHistory extends Component {\n\n  // Change options to get from backend\n  state = {\n    bookings: []\n  }\n\n  componentDidMount() {\n    CustomerService.getCustomerPastBookings(AuthenticationService.getLoggedInId()).then((response) => {\n      this.setState({\n        bookings: response.data\n      })\n    });\n  }\n\n  render() {\n    let bookings = <div className = \"bookings-header\">No Bookings Found</div>\n    if(this.state.bookings.length > 0){\n      bookings = this.state.bookings.map((booking) => {\n        return <BookingBubble key = {booking.id} booking = {booking} />\n      });\n    }\n\n    return (\n      <div>\n        <header className=\"bookings-header\"><span role=\"img\" aria-label=\"Time emoji\">🕒</span> Booking History <span role=\"img\" aria-label=\"Time emoji\">🕒</span></header>\n        {bookings}\n      </div>\n\n    );\n  }\n\n}\n\nexport default BookingHistory;","import React from \"react\";\nimport DashboardCard from \"../Dashboard/DashboardCard\";\nimport \"../../css/BookingSummary.css\"\nfunction BookingSummary(){\n\n\n    return(\n        <div className=\"booking-summary-heading\">\n            <h1>Booking Summary</h1>\n            <div className=\"card-deck booking-summary-deck\">\n                <DashboardCard title=\"Past Bookings\" desc=\"View a summary of past bookings!\" link= \"/bookings/summary/past\"/>\n                <DashboardCard title=\"New Bookings\" desc=\"View a summary of new bookings!\" link= \"/bookings/summary/new\"/>\n            </div>\n        </div>\n    );\n\n}\n\nexport default BookingSummary;","import axios from 'axios';\n\nconst BUSINESS_API_BASE_URL = 'http://milestone2application-env.eba-zp9wdxdp.us-east-1.elasticbeanstalk.com/api/business'\n\n// service for all REST api calls stemming from the url 'api/customer'\nclass BusinessService {\n\n    getAllBusinesses(){\n        return axios.get(BUSINESS_API_BASE_URL);\n    }\n\n    getBusinessPastBookings(businessId){\n        return axios.get(BUSINESS_API_BASE_URL + '/' + businessId + '/bookings/past');\n    }\n\n    getBusinessById(businessId){\n        return axios.get(BUSINESS_API_BASE_URL + '/' + businessId);\n    }\n\n}\n\nexport default new BusinessService()\n","import axios from 'axios'\nimport API_HOST from '../Utils/utils';\n\nconst BOOKING_API_BASE_URL = 'http://milestone2application-env.eba-zp9wdxdp.us-east-1.elasticbeanstalk.com/api/booking'\n\n// service for all REST api calls stemming from the url 'api/booking'\nclass BookingService {\n\n    getAllBookings(){\n        return axios.get(BOOKING_API_BASE_URL);\n    }\n\n    // // hypothetical api\n    // getAllActiveBookings(){\n    //     return axios.get(BOOKING_API_BASE_URL + '/active');\n    // }\n\n    addBooking(booking){\n        return axios.post(BOOKING_API_BASE_URL, booking);\n    }\n\n    getNewestBookingSlot(){\n        return axios.get(API_HOST + '/api/booking-slot/newest');\n    }\n\n    getMatchingBookingSlots(searchRequest){\n        return axios.post(API_HOST + '/api/booking-slot/search', searchRequest);\n    }\n\n    getBookingSlotById(bookingSlotId){\n        return axios.get(API_HOST + '/api/booking-slot/' + bookingSlotId);\n    }\n\n    deleteCustomerBooking(bookingId){\n        return axios.delete(BOOKING_API_BASE_URL  + '/' + bookingId);\n    }\n\n}\n\nexport default new BookingService()\n","import React, { useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport \"../../css/BookingHistory.css\";\n\n//this component is going to be a single grey bubble displaying the data of a single booking\nfunction BookingSlotBubble({bookingSlot, handleChosenSlot}) {\n\n  const [serviceId, setServiceId] = useState(null);\n  const [bookingSlotId] = useState(bookingSlot.id);\n  \n  function passChoices(event){\n    event.preventDefault();\n    handleChosenSlot(bookingSlotId, serviceId);\n  }\n\n  function handleChange(event) {\n    const {name, value} = event.target;\n    if(name === \"service\"){\n      setServiceId(value);\n    }\n  }\n\n  return (\n    <>\n      <Card className='bookingbubble'\n        bg=\"light\"\n        key={bookingSlot.id}>\n        <form onSubmit={passChoices}>\n        <Card.Body>\n          <Card.Header className=\"text-muted\">Booking Slot #{bookingSlot.id}</Card.Header>\n          <Card.Title className=\"cardtitle\">{bookingSlot.businessName}</Card.Title>\n          <Card.Text className=\"cardtext\">\n              <span className=\"bookingbubble-line\">\n                  <span className=\"bookingbubble-title\">Date:</span>\n                  <span className=\"bookingbubble-text\">{bookingSlot.date}</span>                    \n                  <br/>\n              </span> \n              <span className=\"bookingbubble-line\">\n                  <span className=\"bookingbubble-title\">Start Time:</span>\n                  <span className=\"bookingbubble-text\">{bookingSlot.startTime}</span>                    \n                  <br/>\n              </span> \n              <span className=\"bookingbubble-line\">\n                  <span className=\"bookingbubble-title\">End Time:</span>\n                  <span className=\"bookingbubble-text\">{bookingSlot.endTime}</span>\n                  <br/>\n              </span> \n              <span className=\"bookingbubble-line\">\n                  <span className=\"bookingbubble-title\">Worker:</span>\n                  <span className=\"bookingbubble-text\">{bookingSlot.workerName}</span>\n                  <br/>\n              </span>\n              <span className=\"bookingbubble-line\">\n                  <span className=\"bookingbubble-title\">Services:</span>\n                  <span className=\"bookingbubble-text\">\n                    <select name=\"service\" onChange={handleChange} required=\"true\">\n                      <option value=\"\" disabled selected hidden>\n                        Select an option\n                      </option>\n                      {bookingSlot.availableServices.map((service) => \n                      <option key={service.id} value={service.id}>{service.title}</option>)}\n                    </select> \n                  </span>\n                  <br/>\n              </span>            \n          </Card.Text>\n          <Card.Footer className=\"text-right\">\n            <Button size=\"sm\" type=\"submit\" >Book</Button>\n          </Card.Footer>\n        </Card.Body>\n        </form>\n      </Card>\n      <br/>\n    </>\n  )\n\n}\n\nexport default BookingSlotBubble;","import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport PostRequestService from \"../../services/PostRequestService\";\nimport moment from \"moment\";\nimport CustomerService from \"../../services/CustomerService\";\nimport BusinessService from \"../../services/BusinessService\";\nimport BookingService from \"../../services/BookingService\";\nimport BookingSlotBubble from \"../Bubbles/BookingSlotBubble\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\n\nfunction BookingPageTest(props) {\n\n  // business variables\n  const [business, setBusiness] = useState({\n    id: \"\",\n    name: \"\",\n    services: [],\n    workers: []\n  });\n  const [businessId, setBusinessId] = useState(null);\n  const [customerId, setCustomerId] = useState(null);\n  const [service, setService] = useState(null);\n  const [serviceId, setServiceId] = useState(null);\n  const [services, setServices] = useState([]);\n  const [worker, setWorker] = useState(null);\n  const [workerId, setWorkerId] = useState(null);\n  const [workers, setWorkers] = useState([]);\n  const [bookingSlotId, setBookingSlotId] = useState(null);\n  const [date, setDate] = useState(null);\n  const [dateString, setDateString] = useState(\"\");\n  const [bookingSlots, setBookingSlots] = useState([]);\n\n  var bookingSlotVar = null;\n  var bookingSlotIdVar = null;\n  var serviceIdVar = null;\n\n  // modal logic\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n    \n  // initialise (classless equivalent of componentDidMount())\n  useEffect(() => {\n    CustomerService.getCustomerById(AuthenticationService.getLoggedInId())\n    .then((response) =>{\n      setCustomerId(response.data.id)\n    });\n    BusinessService.getBusinessById(props.match.params.businessId)\n    .then((response) =>{\n      setBusiness(response.data);\n      setBusinessId(response.data.id)\n      setServices(response.data.services);\n      setWorkers(response.data.workers);\n    });\n  }, [] )\n\n  // these \"force\" functions are jank to force sync when updating usestate, changing context seems to make them take effect immediately\n  function forceSetServiceId(id){\n    setServiceId(id);\n  }\n  function forceSetWorkerId(id){\n    setWorkerId(id);\n  }\n  function forceSetBookingSlotId(id){\n    setBookingSlotId(id);\n  }\n  function forceSetBookingSlots(data){\n    setBookingSlots(data);\n  }\n\n  function handleChange(event) {\n    const {name, value} = event.target;\n    if(name === \"service\"){\n      forceSetServiceId(value);\n    }\n    if(name === \"worker\"){\n      forceSetWorkerId(value);\n    }\n  }  \n\n  function handleDate(chosenDate) {   \n    if(chosenDate === null){\n      setDate(\"\");\n      setDateString(\"\");\n    }\n    else{\n      var convertedDate = moment(chosenDate).format(\"YYYY-MM-DD\");\n      setDate(chosenDate);\n      setDateString(convertedDate);\n    }\n  }\n\n  // clicking \"BOOK\" on a result card inside the moda\n  function handleChosenSlot(bookingSlot_id, service_id){\n    bookingSlotVar = bookingSlot_id;\n    serviceIdVar = service_id;\n    forceSetBookingSlotId(bookingSlot_id);\n    forceSetServiceId(service_id);    \n    prepareBooking();\n  }\n  \n  // clicking \"BOOK\" on a result card inside the modal\n  function prepareBooking() {    \n    BookingService.getBookingSlotById(bookingSlotVar)\n      .then((response) => {\n        const newBooking = {\n          customerId: customerId,\n          workerId: response.data.workerId,\n          businessId: response.data.businessId,\n          bookingSlotId: response.data.id,\n          serviceId: serviceIdVar\n        }\n        submitBooking(newBooking);\n    });    \n  }\n\n  // confirming creation of booking with all chosen attributes\n  function submitBooking(booking){\n    PostRequestService.postRequest(\"/api/booking\", booking)\n      .then((response) => {\n        if (response.data != null) {\n          alert(\"Booking Created\");\n        } else {\n          alert(\"error\");\n        }\n      })\n      .catch(() => {        \n    });\n    handleClose();\n  }\n\n  let bookingSlotList = <p>No Bookings Found!</p>;  \n  function handleModal(event){\n    event.preventDefault();\n    const searchRequest = {\n      businessId: businessId,\n      serviceId: serviceId,\n      workerId: workerId,\n      dateString: dateString\n    }\n    BookingService.getMatchingBookingSlots(searchRequest)\n      .then((response) => {\n        if(Array.isArray(response.data)){\n          forceSetBookingSlots(response.data);\n        }\n        else{\n          forceSetBookingSlots([]);\n        }\n    });\n    setShow(true);  \n  }\n\n  var serviceList = <option value=\"\" disabled hidden></option>;\n  serviceList = services.map((service) => {\n    return <option key={service.id} value={service.id}>{service.title}</option>\n  });\n\n  var workerList = <option value=\"\" disabled hidden></option>;\n  workerList = workers.map((worker) => {\n    return <option key={worker.id} value={worker.id}>{worker.name}</option>\n  });\n \n  return (   \n     \n  <>     \n    <div className=\"form\">\n      <h1>Create a booking at {business.name}:</h1>\n      <br/>\n      <form onSubmit={handleModal}>\n\n        <h4>Service</h4>\n        <select\n          style={{width: 150}}\n          name=\"service\"\n          value={service}\n          onChange={handleChange}>\n          <option key=\"0\" value=\"0\">-Any-</option>\n          {serviceList}\n        </select>\n        <br/><br/>\n\n        <h4>Worker</h4>\n        <select\n          style={{width: 150}}\n          name=\"worker\"\n          value={worker}\n          onChange={handleChange}>\n          <option key=\"0\" value=\"0\">-Any-</option>\n          {workerList}\n        </select>\n        <br/><br/>\n        \n        <h4>Date</h4>\n        <DatePicker\n          name=\"date\"\n          selected={date}\n          onChange={handleDate}\n          isClearable\n          dateFormat=\"yyyy/MM/dd\"\n          placeholderText=\"No Date Specified\"\n        />\n        <br/><br/>\n\n        <div>\n          <input type=\"button\" onClick={handleModal} value=\"Search for Bookings\" />\n        </div>\n      </form>\n    </div>\n\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Choose a Booking</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n          {bookingSlots.map((bookingSlot) => (\n            <BookingSlotBubble \n              bookingSlot={bookingSlot} \n              handleChosenSlot={(bookingSlot_id, service_id) => handleChosenSlot(bookingSlot_id, service_id)}\n            />))\n          }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n\n  </>\n\n  );\n  \n}\n\nexport default BookingPageTest;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {BUSINESS_CARD_LINK} from \"../../Utils/utils\";\n\n// Single 'BusinessCard' to display each business as a card and provide them with a dynamic route\nfunction BusinessCard(props){\n    return (\n       \n        <Link className=\"card w-25 list-group-item text-center business-card list-group-item-action\" to={`${BUSINESS_CARD_LINK}${props.id}`}>\n                <div className=\"card-body\">\n                    <h5 className=\"card-text\">{props.businessName}</h5>\n                </div>\n        </Link>      \n    );\n}\n\nexport default BusinessCard;","import React, {useState, useEffect} from \"react\";\nimport BusinessCard from \"./BusinessCard\";\nimport \"../../css/SelectABusiness.css\";\nimport BusinessService from \"../../services/BusinessService\";\n\n/*\n    For select a business page,\n    Shows a list of businesses using the backend api /api/business\n    Each business has a dynamic routing to /bookings/create/:businessId\n*/\nfunction SelectBusinessPage(){\n\n    const [businesses, setBusiness] = useState([]);\n    useEffect(() => {\n        \n        BusinessService.getAllBusinesses()\n        .then((response) =>{\n          \n            setBusiness(response.data);\n        })\n        .catch(() => {\n            console.log(\"Error in getting businesses\");\n            setBusiness([]);\n        })\n\n\n    }, []);\n\n    return (\n        <div className=\"booking-summary-heading\">\n        <h1 className=\"select-business-page-header\">Select a business</h1>\n        <ul className=\"list-group business-card-list-group\">\n            \n            {businesses.length > 0 ? businesses.map(business => <BusinessCard key={business.id} id={business.id} businessName={business.name}/>) : \n            <div>\n                <h1> No businesses available </h1>\n            </div>\n            }\n           \n        </ul>\n    </div>\n    )\n}\n\nexport default SelectBusinessPage;","import axios from 'axios';\n\nconst ADMIN_API_BASE_URL = 'http://milestone2application-env.eba-zp9wdxdp.us-east-1.elasticbeanstalk.com/api/admin'\n\n// service for all REST api calls stemming from the url 'api/customer'\nclass AdminService {\n\n    // need to setup security such that only the owner of this id (or an admin) can access\n    getAdminById(adminId){\n        return axios.get(ADMIN_API_BASE_URL + '/' + adminId);\n    }\n\n\n\n}\n\nexport default new AdminService()\n","import React, {useState, useEffect} from \"react\";\nimport BusinessService from \"../../services/BusinessService\";\nimport AdminService from \"../../services/AdminService\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport BookingBubble from \"../Bubbles/BookingBubble\";\n\nfunction PastBookingSummary(props){\n\n    const [bookings, setBookings] = useState([]);\n\n    useEffect(() => {\n        AdminService.getAdminById(AuthenticationService.getLoggedInId()).then(response => {\n            let businessId = response.data.businessId;\n            getPastBookings(businessId);\n        }).catch();\n    }, []);\n\n    function getPastBookings(businessId){\n        BusinessService.getBusinessPastBookings(businessId).then(response => {\n            setBookings(response.data)\n        }).catch();\n    }\n\n    return(\n        <div>\n            <header className=\"bookings-header\"><span role=\"img\" aria-label=\"Time emoji\">🕒</span> {props.title} <span role=\"img\" aria-label=\"Time emoji\">🕒</span></header>\n            { bookings.length > 0 ? \n               bookings.map((booking) => <BookingBubble key = {booking.id} booking = {booking} />)\n                :\n                <div className = \"bookings-header\">No Bookings Found</div>\n            }\n\n        </div>\n    );\n}\n\nexport default PastBookingSummary;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport \"../../css/BookingHistory.css\";\nimport Button from 'react-bootstrap/Button';\nimport BookingService from \"../../services/BookingService\"\n\n//this component is going to be a single grey bubble displaying the data of a single booking\nfunction BookingBubble(props) {\n\n  function deleteBooking(){\n    BookingService.deleteCustomerBooking(props.booking.id)\n    .then(response =>{\n      if(response.data != null){\n        alert(\"Booking deleted sucessfully\");\n      }\n    })\n  }\n\n    return (\n        <div>\n        <Card className='bookingbubble' bg=\"light\">\n            <Card.Body>\n              <Card.Header className=\"text-muted\">Booking #{props.booking.id}</Card.Header>\n              <Card.Title className=\"cardtitle\">{props.booking.businessName}</Card.Title>\n              <Card.Text className=\"cardtext\">\n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Service:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.serviceTitle}</span>\n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Date:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.date}</span>                    \n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Start Time:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.startTime}</span>                    \n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">End Time:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.endTime}</span>\n                    <br/>\n                </span> \n                <span className=\"bookingbubble-line\">\n                    <span className=\"bookingbubble-title\">Worker:</span>\n                    <span className=\"bookingbubble-text\">{props.booking.workerName}</span>\n                    <br/>\n                </span>\n              </Card.Text>\n              <Card.Footer className=\"text-right text-muted\">\n                <Button variant='danger' onClick={deleteBooking}>CANCEL</Button>\n              </Card.Footer>\n            </Card.Body>\n          </Card>\n          <br/>\n        </div>\n    )\n}\n\nexport default BookingBubble;","import React, {Component} from \"react\";\nimport BookingBubble from \"./BookingBubble.jsx\";\nimport CustomerService from \"../../services/CustomerService\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\n//for debug printing using util2.inspect(object, false, null, true)\n// const util2 = require('util');\n\nclass CurrentBookings extends Component {\n\n  // Change options to get from backend\n  state = {\n    bookings: []\n  }\n\n  componentDidMount() {\n    CustomerService.getCustomerCurrentBookings(AuthenticationService.getLoggedInId()).then((response) => {\n      this.setState({\n        bookings: response.data\n      })\n    });\n  }\n\n  render() {\n    let bookings = <div className = \"bookings-header\">No Bookings Found</div>\n    if(this.state.bookings.length > 0){\n      bookings = this.state.bookings.map((booking) => {\n        return <BookingBubble key = {booking.id} booking = {booking} />\n      });\n    }\n\n    return (\n      <div>\n        <header className=\"bookings-header\"><span role=\"img\" aria-label=\"Time emoji\">🕒</span> Bookings <span role=\"img\" aria-label=\"Time emoji\">🕒</span></header>\n        {bookings}\n      </div>\n\n    );\n  }\n\n}\n\nexport default CurrentBookings;","import React from \"react\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {Link} from \"react-router-dom\";\n\n\n\nfunction AddEmployeeButton(props){\n\n\nreturn (<div>\n            <Link to=\"/workers/add\" className=\"employee-link\">\n                <button type=\"button\" className=\"btn btn-primary list-group-item add-task-button\" >\n                    <li>\n                        Add Employee...\n                        <AddBoxIcon  className=\"icon-margin\"/>\n                    </li>\n                </button>\n            </Link>\n        </div>);\n}\n\n\n\nexport default AddEmployeeButton;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nfunction EmployeeListItem(props){\n    return( \n        <Link to={`/worker/${props.id}`} className=\"employee-link\">\n            <button className=\"list-group-item custom-list-item task list-button\">\n                <li> {props.name}</li>\n            </button>\n        </Link>  \n        );\n}\nexport default EmployeeListItem;","import React, {useEffect, useState} from \"react\";\nimport AddEmployeeButton from \"./AddEmployeeButton\";\nimport WorkerService from \"../../services/WorkerService\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport EmployeeListItem from \"./EmployeeListItem\";\n\nfunction EmployeeList(){\n\n    const [workers, setworkers] = useState([]);\n    useEffect(()=>{\n        WorkerService.getWorkersByBusiness(AuthenticationService.getBusinessId()).then(response => {\n            setworkers(response.data);\n        }).catch();\n\n    },[]);\n\n\n    return(\n        <div className=\"card list list-width\">\n            <ul className=\"list-group list-group-flush remove-list-bullet\">\n            {workers.map(worker => {\n                return(<EmployeeListItem key={worker.id} id={worker.id} name={worker.name}/>)\n            })}\n            \n                <AddEmployeeButton />\n            </ul>\n\n      </div>\n    );\n}\nexport default EmployeeList;","import React from \"react\";\nimport EmployeeList from \"./EmployeeList\";\nimport \"../../css/ManageEmployees.css\"\n\nfunction ManageEmployeesPage() {\n    return(\n        <div>\n            <div className=\"container-fluid\">\n            <h1 className=\"display-4 list-title\">Employees</h1>\n                <EmployeeList />\n            </div>\n        \n      </div>\n    );\n\n}\nexport default ManageEmployeesPage;","import React from \"react\";\n\nfunction WorkerScheduleTable(){\n\n    return(\n        <div> \n            <div className =\"worker-assigned-hours-heading\">\n              <h1>Assigned Working Hours</h1>\n            </div>\n                <div className=\"container\">\n                <table className=\"table worker-table table-bordered \">\n              \n                    <thead className=\"thead-light\">  \n                        <tr>\n                            <th>Date</th>\n                            <th>Day</th>\n                            <th>Time</th>\n                            <th>Service</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                          <td>\n                            29/08/20\n                          </td>\n                          <td>\n                            Saturday\n                          </td>\n                          <td>\n                            10:00 - 13:00\n                          </td>\n                          <td>\n                            Hairdressing\n                        </td>\n                      </tr>\n                    </tbody>\n                </table>\n            </div>\n          </div>\n\n    )\n\n}\n\nexport default WorkerScheduleTable;","import React, {useState, useEffect} from \"react\";\nimport \"../../css/Dashboard.css\";\nimport GetRequestService from \"../../services/GetRequestService\";\nimport WorkerScheduleTable from \"../Dashboard/WorkerScheduleTable\";\nimport {Link} from \"react-router-dom\";\n\nfunction WorkerProfile(props){\n      // TO access business ID use props.match.params.workerId\n  \n    const[userDetails, setUserDetails] = useState({});\n    const [services, setServices] = useState([]); \n    useEffect(() => {\n    \n        GetRequestService.getRequestId(props.apiUrl, props.match.params.workerId)\n        .then((response) => {        \n            setUserDetails(response.data);\n            setServices(response.data.services);    \n            console.log(response.data);\n        })\n        .catch(() => {\n            console.log(\"ERROR USER CANNOT BE FOUND\");\n        });\n\n    }, [props.apiUrl, props.match.params.workerId]);\n\n    return(\n        \n        <div className=\"card dashboard-card\">\n            <div className=\"card-header dashboard-heading-container\">\n            <h1 className=\"dashboard-heading\">View Worker Details</h1>\n            </div>\n            <div className=\"jumbotron profile\">\n                <h1 className=\"display-4\">{userDetails.name}</h1>\n                <p className=\"lead\">View Details</p>\n                <hr className=\"my-4\"/>\n                <ul className=\"list-group profile-list\">\n                    <li className=\"list-group-item\">Username: {userDetails.username}</li>\n                    <li className=\"list-group-item\">Name: {userDetails.name}</li>  \n                    <li className=\"list-group-item\">Address: {userDetails.address}</li>\n                    <li className=\"list-group-item\">Phone: {userDetails.phoneNumber}</li>\n                    <li className=\"list-group-item\">Role: WORKER</li>\n                \n                    <div className=\"service-heading\">\n                        <h2 className=\"display-4 text-center\"> Services </h2> \n                        {services.map(service => <li className=\"list-group-item\" key={service.id}> {service.title}</li>)}\n                    </div>\n                \n                </ul>\n                \n                <Link to={`/workers/edit/${props.match.params.workerId}`}>\n                    <button className=\"btn btn-info profile-btn\">Edit Details here</button>\n                </Link>\n            \n                \n            \n            </div>\n        <WorkerScheduleTable/>\n        </div>\n       \n\n\n    )\n}\nexport default WorkerProfile;","import React from \"react\";\nimport \"../../css/AboutAndContact.css\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nfunction AboutUs() {\n\n\n    return (\n\n        <div className=\"about-page\">\n            <div className=\"about-section\" >\n                <h1 >About Us</h1>\n                <p>Welcome to AGME!</p>\n                <p>We're dedicated to providing you the best of all services, with a focus on dependability. customer service, and luxury.\n                We hope you enjoy our services as much as we enjoy offering them to you.\n                </p>\n                <p>Sincerely,\n                AGME Team</p>\n            </div>\n\n            <h2 className=\"about-header\"> Our Team</h2>\n\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"card\">\n                            <h3>Austin</h3>\n                            <p>Insert Title</p>\n                            <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n                            <p>email@example.com</p>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"card\">\n                            <h3>Joshua</h3>\n                            <p>Insert Title</p>\n                            <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n                            <p>email@example.com</p>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"card\">\n                            <h3>Danny</h3>\n                            <p>Insert Title</p>\n                            <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n                            <p>email@example.com</p>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"card\">\n                            <h3>Daniel</h3>\n                            <p>Insert Title</p>\n                            <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n                            <p>email@example.com</p>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"card\">\n                            <h3>Umer</h3>\n                            <p>Insert Title</p>\n                            <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n                            <p>email@example.com</p>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n\n        </div>\n\n    )\n\n}\n\n\n\nexport default AboutUs;","import React from \"react\";\nimport \"../css/Footer.css\";\n\nfunction Footer(){\n\n    return(\n        <footer id = \"footer\">\n            <div className =\"inner-footer\">\n            <ul className=\"copyright\">\n                <li className=\"footer-item\">\n                    @8.MON-17.30-2\n                </li>\n\n            </ul>\n            </div>\n        </footer>\n    )\n\n}\n\nexport default Footer;","import React, {useState} from \"react\";\nimport Register from \"../Register\";\nimport Login from \"../Login\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"../Nav/Navbar\";\n// import ListCustomerBookings from \"../TESTINGListCustomerBookings\";\nimport WorkerAuthenticatedRoute from \"./WorkerAuthenticatedRoute\";\nimport CustomerAuthenticatedRoute from \"./CustomerAuthenticatedRoute\";\nimport AdminAuthenticatedRoute from \"./AdminAuthenticatedRoute\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport BookingHistory from \"../BookingHistory/BookingHistory\";\n// import BookingPage from \"../BookingPage\";\nimport BookingSummary from \"../AdminBookingSummary/BookingSummary\"\nimport BookingPageTest from \"../MakeABooking/BookingPageTest\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport SelectBusinessPage from \"../MakeABooking/SelectBusinessPage\";\nimport PastBookingSummary from \"../AdminBookingSummary/PastBookingSummary\";\nimport CurrentBookings from \"../CurrentBookings/CurrentBookings\";\nimport ManageEmployeePage from \"../ManageEmployees/ManageEmployeePage\";\nimport WorkerProfile from \"../ManageEmployees/WorkerProfile\";\nimport EditEmployeePage from \"../ManageEmployees/EditEmployeePage\";\nimport AddEmployeePage from \"../ManageEmployees/AddEmployeePage\";\nimport AboutAndContact from \"../HomePage/AboutAndContact\";\nimport Footer from \"../Footer\";\nimport {GET_CUSTOMER_URL, GET_ADMIN_URL, CUSTOMER_BUTTON_DETAILS, ADMIN_BUTTON_DETAILS, GET_WORKER_URL, CUSTOMER} from \"../../Utils/utils\";\n\n// Routes the application\n// Google React-Router-Dom to learn more about routing\nfunction AppRouting() {\n    const [isLoggedIn, setIsLoggedIn] = useState(AuthenticationService.isUserLoggedIn());\n  return (\n    <Router> \n    <div>\n      <Route path=\"/\" render={(props) => <Navbar {...props} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />}/>\n      \n      <Switch>\n        {/* GENERAL ROUTES */}\n        <Route path=\"/\" exact render={(props) => <Login {...props} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>} />        \n        <Route path=\"/register\" exact component={Register} />\n        <Route path=\"/about\" exact component={AboutAndContact} />\n        {/* CUSTOMER ROUTES\n         <CustomerAuthenticatedRoute path=\"/bookings/create\" exact component={BookingPageTest}/> \n        */}\n        <CustomerAuthenticatedRoute path=\"/customer\" exact render={(props) => <Dashboard {...props} title={`Customer Dashboard`} details={CUSTOMER_BUTTON_DETAILS} \n        apiUrl={AuthenticationService.getRole() === CUSTOMER ? GET_CUSTOMER_URL : GET_ADMIN_URL}/>} />       \n        <CustomerAuthenticatedRoute path=\"/bookings/past\" exact component={BookingHistory}/> \n        <CustomerAuthenticatedRoute path=\"/bookings/create/:businessId\" exact component={BookingPageTest} />\n        <CustomerAuthenticatedRoute path=\"/bookings/business\" exact component={SelectBusinessPage}/> \n        <CustomerAuthenticatedRoute path=\"/bookings/manage\" exact component={CurrentBookings}/> \n\n         {/* ADMIN ROUTES */}\n        <AdminAuthenticatedRoute path=\"/admin\" exact render={(props) => <Dashboard {...props} title={`Admin Dashboard`} details={ADMIN_BUTTON_DETAILS} apiUrl={GET_ADMIN_URL}/>} />\n        <AdminAuthenticatedRoute path=\"/bookings/summary\" exact render={(props) => <BookingSummary {...props}/>} />\n        <AdminAuthenticatedRoute path=\"/bookings/summary/past\" exact render={(props) => <PastBookingSummary {...props} title={`Past Booking Summary`}/> } />\n        <AdminAuthenticatedRoute path=\"/workers\" exact render={(props) => <ManageEmployeePage {...props}/> } />\n        <AdminAuthenticatedRoute path=\"/worker/:workerId\" exact render={(props) => <WorkerProfile {...props} apiUrl={GET_WORKER_URL}/> } />\n        <AdminAuthenticatedRoute path=\"/workers/edit/:workerId\" exact render={(props) => <EditEmployeePage {...props}/> } />\n        <AdminAuthenticatedRoute path=\"/workers/add\" exact render={(props) => <AddEmployeePage {...props}/> } />\n         {/* WORKER ROUTES */}\n        <WorkerAuthenticatedRoute path=\"/worker\" exact render={(props) => <Dashboard {...props} title={`Worker Dashboard`} apiUrl={GET_WORKER_URL} />} />\n      </Switch>\n      <Route path=\"/\" render={(props) => <Footer />}/>\n    \n    </div>\n    </Router>\n  );\n}\n\nexport default AppRouting;","import React from \"react\";\nimport AppRouting from \"./components/Routes/AppRouting\";\n\n\n\nfunction App() {\n  return (\n    <AppRouting/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./css/index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}